import '@/styles/globals.css';
import { Provider } from 'react-redux';
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import Head from 'next/head';
import { ThemeProvider } from 'next-themes'
import { Toaster } from 'react-hot-toast';
import Router from 'next/router';
import NProgress from 'nprogress';
import 'nprogress/nprogress.css';
import { store } from '@/store/store';
import { useEffect, useState } from "react";
import { useDispatch } from "react-redux";
import { loadCart } from "@/store/cartSlice";
import Maintenance from '@/components/Maintenance';
import { AuthProvider } from '@/context/AuthContext';


// Optional: Configure NProgress
NProgress.configure({ showSpinner: false }); // only bar

Router.events.on('routeChangeStart', () => {
  NProgress.start();
});

Router.events.on('routeChangeComplete', () => {
  NProgress.done();
});

Router.events.on('routeChangeError', () => {
  NProgress.done();
});


function CartLoader({ children }) {
  const dispatch = useDispatch();

  useEffect(() => {
    const storedCart = localStorage.getItem("cart");
    if (storedCart) {
      dispatch(loadCart(JSON.parse(storedCart)));
    }
  }, [dispatch]);

  return children;
}


export default function MyApp({ Component, pageProps }) {

  const [isMaintenance, setIsMaintenance] = useState(false);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchMaintenanceStatus = async () => {
      try {
        const res = await fetch(
          // "https://steadfast-gem-fdb13b7584.strapiapp.com/api/sites?filters[id][$eq]=5"   //id is heardcoded
          `${process.env.NEXT_PUBLIC_STRAPI_URL}api/sites?filters[title][$eq]=maintenance`,   //id is heardcoded
          // `${process.env.NEXT_PUBLIC_STRAPI_URL}api/sites?filters[title][$eq]=maintenance_mode`,   //id is heardcoded
        );
        const data = await res.json();

        const maintenance = data?.data?.[0]?.maintenance_mode ?? false;
        setIsMaintenance(maintenance);
      } catch (err) {
        console.error("Maintenance mode fetch failed:", err);
        setIsMaintenance(false); // Default to no maintenance on error
      } finally {
        setLoading(false);
      }
    };

    fetchMaintenanceStatus();
  }, []);

  if (loading) return null; // or loading spinner

  // Block entire app unless on /admin
  if (isMaintenance && typeof window !== "undefined" && window.location.pathname !== "/admin") {
    return <Maintenance />;
  }

  return (
    <>
      <Head>
        <title>Online Shoe Store | JS Dev Hindi</title>
        <meta
          name="description"
          content="Generated by create next app"
        />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1"
        />
        <link rel="icon" href="/favicon.ico" />
        {/* <link rel="preconnect" href="https://fonts.googleapis.com" /> */}
        {/* <link
          rel="preconnect"
          href="https://fonts.gstatic.com"
          crossOrigin="true"
        /> */}
        {/* <link rel="preconnect" href="https://fonts.googleapis.com" /> */}
        {/* <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin /> */}
        <link href="https://fonts.googleapis.com/css2?family=Onest:wght@100..900&display=swap" rel="stylesheet" />
      </Head>
      <ThemeProvider attribute="class">
        <AuthProvider>
          <Provider store={store}>
            <CartLoader>
              {/* <SyncUser /> */}
              <div className="flex flex-col min-h-screen">
                <Header />
                <main className="flex-grow">
                  <Component {...pageProps} />
                  <Toaster position="top-right" />
                </main>
                <Footer />
              </div>
            </CartLoader>
          </Provider>
        </AuthProvider>
      </ThemeProvider>
    </>
  );
}
